Key Features

Interactive Web Interface

Clean, responsive design using Bootstrap with custom styling
Drag-and-drop image upload functionality
Real-time visual feedback during processing
Color-coded results display with confidence scores


Advanced Model Integration

Properly implements your HR-SEMobileCapsNet architecture with SE Blocks
Maintains the exact model structure from your code
Handles grayscale image preprocessing with correct normalization


Optimized Performance

Efficient image processing pipeline
Proper memory management for uploaded images
Fast inference with PyTorch


Deployment Ready

Complete Docker integration with docker-compose support
Volume mapping for persistent storage of models and uploads


Flexible Model Management

Option to upload model files through the UI
Support for model versioning


Comprehensive Result Display

Visual classification results with color-coded indicators
Confidence score visualization with progress bars
Image preview and metadata display



Project Structure
The project consists of the following key files:

app.py: Main FastAPI application with model definition and endpoints
templates/index.html: Frontend template with UI components
utils.py: Utility functions for image processing and visualization
requirements.txt: Python dependencies
Dockerfile & docker-compose.yml: Container configuration
README.md: Setup and usage instructions

How to Run the Application
Option 1: Direct Python Installation

Install the required dependencies:
bashpip install -r requirements.txt

Run the application:
bashpython app.py

Access the web interface at http://localhost:8000

Option 2: Docker Deployment

Build and start the Docker container:
bashdocker-compose up -d

Access the web interface at http://localhost:8000

Using the Application

Model Setup: If you already have your trained model (final.pth), place it in the 'models' directory. Otherwise, you can upload it through the web interface.
Image Upload: Upload lung images through the drag-and-drop interface or file selector.
Analysis: Click "Analyze Image" to process the image and view results.
Results Interpretation: The system will show the classification (Normal, Benign, or Malignant) with confidence scores for each category.

Technical Implementation Details

Model Architecture: Implemented the complete HR-SEMobileCapsNet with all components:

Feature Extractor with SE Blocks
Primary Capsule Layer
Digit Capsule Layer with dynamic routing


Image Processing Pipeline:

Converts images to grayscale (1 channel)
Resizes to 128x128 pixels
Normalizes with mean 0.5, std 0.5


Error Handling: Robust error handling for model loading, image processing, and prediction.
Security: Input validation to prevent malicious file uploads.

The application is ready to use with your trained model. Simply place your model file in the 'models' directory (or upload it through the UI), and you can start analyzing lung images immediately.
